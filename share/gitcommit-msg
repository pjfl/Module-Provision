#!/usr/bin/env perl
# @(#)$Ident: .gitcommit-msg 2013-04-04 14:30 pjf ;

use strict;
use warnings;
use lib q(lib);
use version; our $VERSION = qv( '0.1' );

use Date::Format     qw(time2str);
use English          qw(-no_match_vars);
use Module::Metadata;
use Text::Autoformat qw(autoformat);

my $file = $ARGV[ 0 ];

open my $in, '<', $file or die "Path ${file} cannot open: ${OS_ERROR}";

my $message = do { local $RS = undef; <$in> }; close $in;

$message = autoformat $message, { left => 11, right => 78 };
chomp $message; chomp $message;

$file = -f 'Changes' ? 'Changes' : undef;

if (defined $file) {
   open $in, '<', $file or die "File ${file} cannot open: ${OS_ERROR}";

   my $changes     = do { local $RS = undef; <$in> }; close $in;
   my $changes_ver = qv( (split q( ),
                          (grep { m{ \A v?[0-9._]+ \s+ }mx } split m{ [\n] }mx,
                           $changes)[ 0 ] || q())[ 0 ] || '0.1.1' );
   my $module_ver  = qv( '0.1.1' );
   my $module;

   $file = -f 'Build.PL'    ? 'Build.PL'    :
           -f 'Makefile.PL' ? 'Makefile.PL' : undef;

   if (defined $file) {
      open my $in, '<', $file or die 'File ${file} cannot open: ${OS_ERROR}';

      my $content = do { local $RS = undef; <$in> }; close $in;

      $module = (map    { eval $_ }
                 map    { m{ \A \s* (?:module|name) \s* => \s* (.+) [,] }imx }
                 grep   { m{ \A \s*   (module|name) }imx }
                 split m{ [\n] }mx, $content)[ 0 ];
      $module_ver = Module::Metadata->new_from_module( $module )->version;
   }

   my $stamp = time2str( '%Y-%m-%d %H:%M:%S', time ); my $entry;

   if ($module_ver > $changes_ver) {
      $entry   = sprintf "%-9.9s %s\n%s\n", $module_ver, $stamp, $message;
      $changes =~ s{ ^ (v?[0-9._]+ \s+ .*) $ }{$entry\n$1}mx;
   }
   else {
      $entry   = sprintf "%-9.9s %s\n%s", $changes_ver, $stamp, $message;
      $changes =~ s{ ^ (v?[0-9._]+ \s+ .*) $ }{$entry}mx;
   }

   $file = 'Changes';
   open my $out, '>', $file or die "File ${file} cannot open: ${OS_ERROR}";
   print {$out} $changes; close $out;

   my $cmd = "git add ${file}"; qx{ $cmd };
}

exit 0;
